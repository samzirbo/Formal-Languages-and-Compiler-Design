program := statement_list
statement_list := statement | statement "\n" statement
statement := (declaration | assignment | io | if_stmt | while_stmt | for_stmt)

expression ::= expression + term | expression - term | term
term ::= term * factor | term / factor | term / factor | factor
factor ::= "(" expression ")" | ID | CONST

type := primitive | array_decl
primitive := "int" | "str"
array_decl := "list of " primitive
declaration := ID " " primitive | array_decl

assignment := ID "=" expression

io := ">>" ID | "<<" (ID|CONST)

if_stmt := "if (" condition ") then " statement_list "end" | "if (" condition ") then " statement_list "else" statement_list "end"

while_stmt := "while (" condition ") do" statement_list "end"

for_stmt := "for" for_header "do" statement_list "end"
for_header := ID "in" ("{" [expression ":"] expression [":" expression] "}") | ID


condition := expression relation expression
relation := "<" | "<=" | "==" | "!=" | ">=" | ">"
